sensor:
  - platform: command_line
    command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
    name: HA Current Version
    scan_interval: 86400
  - platform: command_line
    name: HA Installed Version
    command: "/srv/hass/bin/hass --version"
    scan_interval: 86400
  - platform: template
    sensors:
      ha_last_restart:
        value_template: '{% if states.automation.startup_notification and states.automation.startup_notification.attributes.last_triggered %}
                           {{ as_timestamp(states.automation.startup_notification.attributes.last_triggered) | timestamp_custom("%b %d %X") }}
                         {% else %}
                           Never
                         {% endif %}'
        friendly_name: HA Last Restart

automation:
  - alias: 'Update Available Notification'
    hide_entity: true
    trigger:
      platform: state
      entity_id: updater.updater
    action:
      service: notify.pushbullet
      data:
        title: "HomeAssistant Update"
        message: "HomeAssistant {{ states('updater.updater') }} is now available."

  - alias: "Startup Notification"
    hide_entity: true
    trigger:
      platform: event
      event_type: homeassistant_start
    action:
      service: notify.pushbullet
      data:
        title: "HomeAssistant Startup"
        message: "Home Assistant restarted."

group:
  hass:
    name: HomeAssistant
    entities:
      - sensor.ha_installed_version
      - sensor.ha_current_version
      - sensor.ha_last_restart
