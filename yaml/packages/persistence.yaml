################################################################
## Automation / Persistent States
################################################################

################################################################
## Add `persistent: true` in the customize section to enable
##   persistence on an entity.
##
## This currently supports: automation, input_boolean,
##   input_select, input_slider, light, and switch.
##
## Example Configuration:
##
## homeassistant:
##   customize:
##     automation.good_morning_lights:
##       persistent: true
##
##     input_boolean.notify_arrival:
##       persistent: true
##
##     input_select.light_color_1:
##       persistent: true
##
##     input_slider.bedroom_brightness:
##       persistent: true
##
##     light.bedroom:
##       persistent: true
##
##     switch.bedroom_fan:
##       persistent: true
################################################################

automation:
  ################################################
  ## Persistent Publisher
  ################################################

  - alias: persistence_publish
    trigger:
      - platform: event
        event_type: state_changed
    condition:
      - condition: template
        value_template: "{{ trigger.event.data is not none }}"
      - condition: template
        value_template: "{{ trigger.event.data.new_state is not none }}"
      - condition: template
        value_template: "{{ trigger.event.data.new_state.attributes is not none }}"
      - condition: template
        value_template: "{{ trigger.event.data.new_state.attributes.persistent|default(false, true) }}"
      - condition: template
        value_template: "{{ trigger.event.data.old_state is not none }}"
      - condition: template
        value_template: "{{ trigger.event.data.new_state.state != trigger.event.data.old_state.state }}"
    action:
      - service: mqtt.publish
        data_template:
          topic: "home-assistant/{{ trigger.event.data.entity_id|replace('.', '/') }}"
          payload: "{{ trigger.event.data.new_state.state }}"
          retain: true

  ################################################
  ## Persistent Subscriptions
  ################################################

  - alias: persistence_subscribe_binary
    trigger:
      - platform: mqtt
        topic: home-assistant/automation/+
      - platform: mqtt
        topic: home-assistant/input_boolean/+
      - platform: mqtt
        topic: home-assistant/light/+
      - platform: mqtt
        topic: home-assistant/switch/+
    condition:
      - condition: template
        value_template: "{{ not is_state(trigger.topic|replace('home-assistant/', '')|replace('/', '.'), trigger.payload) }}"
    action:
      - service_template: "{{ trigger.topic.split('/')[1] }}.turn_{{ trigger.payload|lower }}"
        data_template:
          entity_id: "{{ trigger.topic|replace('home-assistant/', '')|replace('/', '.') }}"

  - alias: persistence_subscribe_select_option
    trigger:
      - platform: mqtt
        topic: home-assistant/input_select/+
    condition:
      - condition: template
        value_template: "{{ not is_state(trigger.topic|replace('home-assistant/', '')|replace('/', '.'), trigger.payload) }}"
    action:
      - service_template: "{{ trigger.topic.split('/')[1] }}.select_option"
        data_template:
          entity_id: "{{ trigger.topic|replace('home-assistant/', '')|replace('/', '.') }}"
          option: "{{ trigger.payload }}"

  - alias: persistence_subscribe_select_value
    trigger:
      - platform: mqtt
        topic: home-assistant/input_slider/+
    condition:
      - condition: template
        value_template: "{{ not is_state(trigger.topic|replace('home-assistant/', '')|replace('/', '.'), trigger.payload|float) }}"
    action:
      - service_template: "{{ trigger.topic.split('/')[1] }}.select_value"
        data_template:
          entity_id: "{{ trigger.topic|replace('home-assistant/', '')|replace('/', '.') }}"
          value: "{{ trigger.payload|float }}"
